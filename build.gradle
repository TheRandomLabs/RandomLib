buildscript {
	repositories {
		jcenter()

		mavenCentral()

		maven {
			url "http://files.minecraftforge.net/maven"
		}
	}

	dependencies {
		classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "3.+", changing: true
	}
}

apply plugin: "net.minecraftforge.gradle"

version = "1.14.4-1.0.0.0"
group = "com.therandomlabs.randomlib"
archivesBaseName = "randomlib"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = "1.8"

minecraft {
	mappings channel: "snapshot", version: "20190917-1.14.3"

	accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

	runs {
		client {
			workingDirectory project.file("run")

			property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
			property "forge.logging.console.level", "debug"

			mods {
				randomlibtest {
					source sourceSets.test
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file("run")

			property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
			property "forge.logging.console.level", "debug"

			mods {
				randomlibtest {
					source sourceSets.test
					source sourceSets.main
				}
			}
		}
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:1.14.4-28.1.10"
}

jar {
	manifest {
		attributes([
			"Specification-Title": project.name,
			"Specification-Vendor": "TheRandomLabs",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": "${version}",
			"Implementation-Vendor": "TheRandomLabs",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"Fingerprint": project.findProperty("signSHA1") ?: ""
		])
	}
}

import net.minecraftforge.gradle.common.task.SignJar

task signJar(type: SignJar, dependsOn: jar) {
	onlyIf {
		project.hasProperty("keyStore")
	}

	keyStore = project.findProperty("keyStore")
	alias = project.findProperty("keyStoreAlias")
	storePass = project.findProperty("keyStorePass")
	keyPass = project.findProperty("keyStoreKeyPass")
	inputFile = jar.archivePath
	outputFile = jar.archivePath
}

build.dependsOn signJar
